"use client";
import React, { useState, useEffect } from "react";
import { Html5QrcodeScanner } from "html5-qrcode";
import { useRouter } from "next/navigation";
import Head from "next/head";
import Link from "next/link";
import axios from "axios";

export default function Scan() {
  const router = useRouter();
  const [data, setData] = useState("No result");
  const [drugInfo, setDrugInfo] = useState(null);
  const [isScanning, setIsScanning] = useState(false);
  const [showModal, setShowModal] = useState(false);
  const [qrScanner, setQrScanner] = useState(null); // Hold the scanner instance

  useEffect(() => {
    // Initialize the scanner when the component mounts
    const scanner = new Html5QrcodeScanner("qr-reader", { fps: 10, qrbox: 250 });
    setQrScanner(scanner); // Store the scanner instance
  }, []);

  const startScanning = () => {
    if (qrScanner) {
      setIsScanning(true);
      qrScanner.render(
        (result) => {
          // Handle successful scan
          if (result) {
            setData(result);
            setShowModal(true);
            qrScanner.clear(); // Stop the scanner after scanning
            setIsScanning(false);
          }
        },
        (error) => {
          console.info("QR code scan failed: ", error);
        }
      );
    }
  };

  const stopScanning = () => {
    if (qrScanner) {
      qrScanner.clear(); // Stop and clear the scanner
      setIsScanning(false);
    }
  };

  const handleCloseModal = () => {
    setShowModal(false);
    setDrugInfo(null);
    router.push("/verify") // Reset drug info when closing the modal
  };

  const handleOK = async () => {
    try {
      // Assuming 'data' contains the MongoDB _id of the tablet
      const response = await axios.get(`/api/drugs/${data}`);
      console.log(response.data.drug);
      setDrugInfo(response.data.drug); // Save the drug information in state
    } catch (error) {
      console.error("Error fetching drug information:", error);
      alert("Failed to fetch drug information");
    }
  };

  return (
    <>
      <Head>
        <title>Drug Tester</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col mt-[5rem] justify-center items-center">
        <div className="flex flex-col justify-center items-center">
          <h1 className="text-4xl font-bold mb-4">QR Scanner</h1>
          <div id="qr-reader" className="lg:h-[400px] lg:w-[400px] h-[300px] w-[300px]" />
          {!isScanning ? (
            <button
              className="bg-green-500 text-white px-4 py-2 rounded-md m-4 hover:bg-green-600"
              onClick={startScanning}
            >
              Start Scanning
            </button>
          ) : (
            <button
              className="bg-red-500 text-white px-4 py-2 rounded-md m-4 hover:bg-red-600"
              onClick={stopScanning}
            >
              Stop Scanning
            </button>
          )}

          <Link
            href={`/`}
            className=" bg-yellow-200 m-4 text-md rounded-md px-4 py-2 hover:underline"
          >
            Back to home..
          </Link>

          {showModal && (
            <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
              <div className="bg-white rounded-md p-4">
                <p className="text-xl font-bold mb-2">Scanned Data:</p>
                <p>{data}</p>

                {drugInfo ? (
                  <div className="mt-4">
                    <p className="font-bold">Tablet Name: {drugInfo.tabletName}</p>
                    <p>Dosage: {drugInfo.dosageMg} mg</p>
                    <p>Manufacturer: {drugInfo.manufacturerName}</p>
                    <p>Price: {drugInfo.price}</p>
                    <p>Expiry Date: {new Date(drugInfo.expiryDate).toLocaleDateString()}</p>
                    {/* Add other relevant fields here */}
                  </div>
                ) : (
                  <p className="mt-4">Loading drug information...</p>
                )}

                <div className="flex justify-end mt-4">
                  <button
                    className="bg-gray-200 text-gray-800 px-4 py-2 rounded-md hover:bg-gray-300"
                    onClick={handleCloseModal}
                  >
                    Close
                  </button>
                  <button
                    className="bg-blue-500 text-white px-4 py-2 rounded-md mx-4 hover:bg-blue-600"
                    onClick={handleOK}
                  >
                    Fetch Info
                  </button>
                </div>
              </div>
            </div>
          )}
        </div>
      </main>
    </>
  );
}
